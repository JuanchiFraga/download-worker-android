apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {

    compileSdkVersion maxApiLevel.toInteger()
    buildToolsVersion "30.0.3"
    ndkVersion ndkVersion

    defaultConfig {
        minSdkVersion minApiLevel
        targetSdkVersion maxApiLevel

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersions"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "androidx.work:work-runtime-ktx:$workerVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.mockito:mockito-android:$mockitoAndroidVersion"
    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinTestVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.work:work-testing:$workerVersion"

}